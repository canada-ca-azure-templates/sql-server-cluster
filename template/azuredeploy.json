{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "containerSasToken": {
            "type": "string",
            "defaultValue": ""
        },
        "keyVaultConfig": {
            "type": "object"
        },
        "vnetConfig": {
            "type": "object"
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "The location of the template deployment"
            },
            "defaultValue": "canadacentral"
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The name of the Administrator for the new VMs"
            }
        },
        "domainUsername": {
            "type": "string",
            "metadata": {
                "description": "The name of the Administrator accounts used to join the domain and to create the service accounts"
            }
        },
        "dnsServerName": {
            "type": "string"
        },
        "sqlServerConfig": {
            "type": "object"
        },
        "witnessServerConfig": {
            "type": "object"
        },
        "adConfig": {
            "type": "object"
        },
        "templatesBaseUrl": {
            "type": "string",
            "metadata": {
                "description": "Linked Templates base url"
            },
            "defaultValue": "[concat(uri(deployment().properties.templateLink.uri, 'nested'))]"
        },
        "scriptsBaseUrl": {
            "type": "string",
            "metadata": {
                "description": "DSC Scripts base url"
            },
            "defaultValue": "[concat(uri(deployment().properties.templateLink.uri, 'DSC'))]"
        },
        "backupConfig": {
            "type": "object"
        },
        "tagValues": {
            "type": "object"
        }
    },
    "variables": {
        "lbSettings": {
            "sqlLBFE": "[concat(parameters('sqlServerConfig').sqlLBName,'-FE')]",
            "sqlLBBE": "[concat(parameters('sqlServerConfig').sqlLBName,'-BE')]",
            "sqlLBName": "[parameters('sqlServerConfig').sqlLBName]"
        },
        "SQLAOProbe": "SQLAlwaysOnEndPointProbe",
        "vmSettings": {
            "availabilitySets": {
                "sqlAvailabilitySetName": "[concat(parameters('sqlServerConfig').vmName,'-AS')]"
            },
            "rdpPort": 3389
        },
        "sqlAOEPName": "[concat(parameters('sqlServerConfig').vmName,'-HADR')]",
        "sqlAOAGName": "[concat(parameters('sqlServerConfig').vmName,'-AG')]",
        "sqlAOListenerName": "[concat(parameters('sqlServerConfig').vmName,'L')]",
        "sharePath": "[concat(parameters('sqlServerConfig').vmName,'-FSW')]",
        "clusterName": "[concat(parameters('sqlServerConfig').vmName,'C')]",
        "sqlwNicName": "[concat(parameters('witnessServerConfig').vmName,'-NIC')]",
        "sqlSubnetRef": "[concat(variables('derivedIds').vnetID,'/subnets/',parameters('vnetConfig').dbSubnetName)]",
        "sqllbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').sqlLBName)]",
        "derivedIds": {
            "vnetID": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('vnetConfig').existingVnetRG,'/providers/Microsoft.Network/virtualNetworks/', parameters('vnetConfig').existingVnetName)]",
            "sqlBEAddressPoolID": "[concat(variables('sqllbID'),'/backendAddressPools/',variables('lbSettings').sqlLBBE)]",
            "sqllbFEConfigID": "[concat(variables('sqllbID'),'/frontendIPConfigurations/',variables('lbSettings').sqlLBFE)]",
            "sqllbProbeID": "[concat(variables('sqllbID'),'/probes/',variables('SQLAOProbe'))]",
            "keyVaultId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('keyVaultConfig').existingRGName, '/providers/Microsoft.KeyVault/vaults/', parameters('keyVaultConfig').existingVaultName)]"
        },
        "configuration": {
            "nicTemplateURL": "[concat(parameters('templatesBaseUrl'),'/nic.json', parameters('containerSasToken'))]",
            "setupLBsUrl": "[concat(parameters('templatesBaseUrl'),'/setupLBs-i.json',parameters('containerSasToken'))]",
            "creatingNicsUrl": "[concat(parameters('templatesBaseUrl'),'/creatingNICS.json',parameters('containerSasToken'))]",
            "storageAccount": "[concat(parameters('templatesBaseUrl'),'/storageAccount.json',parameters('containerSasToken'))]",
            "provisioningVMs": "[concat(parameters('templatesBaseUrl'),'/provisioningVM.json',parameters('containerSasToken'))]",
            "preparingAlwaysOnSqlServer": "[concat(parameters('templatesBaseUrl'),'/preparingSqlServer.json',parameters('containerSasToken'))]",
            "configuringAlwaysOn": "[concat(parameters('templatesBaseUrl'),'/configuringAlwaysOn.json',parameters('containerSasToken'))]",
            "fswModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateFileShareWitness.ps1.zip',parameters('containerSasToken'))]",
            "fswConfigurationFunction": "CreateFileShareWitness.ps1\\CreateFileShareWitness",
            "sqlAOPrepareModulesURL": "[concat(parameters('scriptsBaseUrl'),'/PrepareAlwaysOnSqlServer.ps1.zip',parameters('containerSasToken'))]",
            "sqlAOPrepareConfigurationFunction": "PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer",
            "createClusterModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateFailoverCluster.ps1.zip',parameters('containerSasToken'))]",
            "createClusterConfigurationFunction": "CreateFailoverCluster.ps1\\CreateFailoverCluster",
            "postUpdateVms": "[concat(parameters('templatesBaseUrl'),'/postUpdateVM.json',parameters('containerSasToken'))]"
        }
    },
    "resources": [
        {
            "name": "StorageAccounts",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "comments": "This resource will create storage accounts for SQL Server, File Share Witness and Diagnostics. ",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').storageAccount]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "sqlStorageAccountName": {
                        "value": "[parameters('sqlServerConfig').sqlStorageAccountName]"
                    },
                    "SqlStorageAccountType": {
                        "value": "[parameters('sqlServerConfig').sqlStorageAccountType]"
                    },
                    "blobEncryptionEnabled": {
                        "value": "[parameters('sqlServerConfig').diagBlobEncryptionEnabled]"
                    },
                    "tagValues": {
                        "value": "[parameters('tagValues')]"
                    }
                }
            }
        },
        {
            "name": "LoadBalancers",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "comments": "Create Load Balancers for SQL",
            "dependsOn": [
                "Microsoft.Resources/deployments/StorageAccounts"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').setupLBsUrl]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "sqlLBName": {
                        "value": "[variables('lbSettings').sqlLBName]"
                    },
                    "sqlLBFE": {
                        "value": "[variables('lbSettings').sqlLBFE]"
                    },
                    "sqlLBIPAddress": {
                        "value": "[parameters('sqlServerConfig').sqlLBIPAddress]"
                    },
                    "staticSubnetRef": {
                        "value": "[variables('sqlSubnetRef')]"
                    },
                    "sqlLBBE": {
                        "value": "[variables('lbSettings').sqlLBBE]"
                    },
                    "sqlLBBEID": {
                        "value": "[variables('derivedIds').sqlBEAddressPoolID]"
                    },
                    "sqllbFEConfigID": {
                        "value": "[variables('derivedIds').sqllbFEConfigID]"
                    },
                    "sqllbProbeID": {
                        "value": "[variables('derivedIds').sqllbProbeID]"
                    },
                    "SQLAOProbe": {
                        "value": "[variables('SQLAOProbe')]"
                    },
                    "tagValues": {
                        "value": "[parameters('tagValues')]"
                    }
                }
            }
        },
        {
            "name": "CreatingNetworkInterfaces",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "comments": "Create Nics for SqlServer-0 and SqlServer-1 and fsw",
            "dependsOn": [
                "Microsoft.Resources/deployments/LoadBalancers"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').creatingNicsUrl]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "sqlVMName": {
                        "value": "[parameters('sqlServerConfig').vmName]"
                    },
                    "sqlSubnetRef": {
                        "value": "[variables('sqlSubnetRef')]"
                    },
                    "sqlBEAddressPoolID": {
                        "value": "[variables('derivedIds').sqlBEAddressPoolID]"
                    },
                    "sqlwNicName": {
                        "value": "[variables('sqlwNicName')]"
                    },
                    "tagValues": {
                        "value": "[parameters('tagValues')]"
                    }
                }
            }
        },
        {
            "name": "ProvisioningVMs",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/CreatingNetworkInterfaces"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').provisioningVMs]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "sqlAvailabilitySetName": {
                        "value": "[variables('vmSettings').availabilitySets.sqlAvailabilitySetName]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "reference": {
                            "keyVault": {
                                "id": "[variables('derivedIds').keyVaultId]"
                            },
                            "secretName": "[parameters('keyVaultConfig').localAdminPasswordSecret]"
                        }
                    },
                    "sqlServerConfig": {
                        "value": "[parameters('sqlServerConfig')]"
                    },
                    "witnessServerConfig": {
                        "value": "[parameters('witnessServerConfig')]"
                    },
                    "keyVaultConfig": {
                        "value": "[parameters('keyVaultConfig')]"
                    },
                    "tagValues": {
                        "value": "[parameters('tagValues')]"
                    }
                }
            }
        }
    ],
    "outputs": {}
}